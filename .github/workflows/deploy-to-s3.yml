name: Auto-échafaudage RCVo
on:
  push:
    branches: 
      - main

jobs:
  scaffold-and-deploy:
    runs-on: ubuntu-latest
    env:
      # Si vous avez un CloudFront, mettez son ID en secret : sinon laissez vide
      CLOUD_FRONT_ID: ${{ secrets.CLOUDFRONT_ID || '' }}

    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Configurer AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ secrets.AWS_REGION }}

      - name: Installer & builder le scaffold
        run: |
          # d'abord on essaie npm ci (rapide), si ça échoue on retente npm install
          npm ci || npm install
          # puis on lance votre script de build du scaffold (ajustez le nom si besoin)
          npm run build:scaffold

      - name: Commit des fichiers de scaffold (si modifs)
        run: |
          git config user.name  "github-actions"
          git config user.email "github-actions@github.com"
          git add .
          git diff --quiet || git commit -m "chore: mise à jour automatique du scaffold"

      - name: Push sur main
        run: git push origin HEAD:main

      - name: Déployer vers S3
        run: aws s3 sync frontend s3://${{ secrets.S3_BUCKET }} --delete

      - name: Invalidation CloudFront
        if: env.CLOUD_FRONT_ID != ''
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "$CLOUD_FRONT_ID" \
            --paths "/*"
