name: Deploy to S3

on:
  push:
    branches:
      - main

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1) On récupère le code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2) On configure AWS via OIDC + role
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.ASSISTANT_ROLE_ARN }}
          aws-region:    ${{ secrets.AWS_REGION }}

      # 3) On installe Node (version à ajuster si besoin)
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          cache: 'npm'

      # 4) On installe les dépendances (dans la racine)
      - name: Install dependencies
        run: |
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi

      # 5) On build l’app front (npm run build doit exister dans votre package.json)
      - name: Build
        run: npm run build

      # 6) On synchronise le dossier de build vers S3
      #    Adaptez "build" s’il s’appelle "dist" ou autre
      - name: Sync to S3
        run: aws s3 sync build/ s3://${{ secrets.S3_BUCKET }} --delete

      # 7) (Optionnel) Invalidation CloudFront si vous avez fourni CLOUDFRONT_ID
      - name: Invalidate CloudFront (optional)
        run: |
          if [ -n "${{ secrets.CLOUDFRONT_ID }}" ]; then
            echo "Invalidating CloudFront distribution ${{ secrets.CLOUDFRONT_ID }}…"
            aws cloudfront create-invalidation \
              --distribution-id ${{ secrets.CLOUDFRONT_ID }} \
              --paths '/*'
          else
            echo "→ No CLOUDFRONT_ID set, skipping invalidation."
          fi
