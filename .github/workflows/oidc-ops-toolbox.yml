name: Rcvo – OIDC Ops Toolbox

on:
  workflow_dispatch:
    inputs:
      cible:
        description: "Env EB"
        required: true
        type: choice
        options: [rcvo-backend-b, Rcvo-Backend-staging, Rcvo-UI-prod]
        default: rcvo-backend-b
      action:
        description: "Action"
        required: true
        type: choice
        options: [get-health, restart, tail-eb, set-env, unset-env]
      key:
        description: "Clé (set/unset-env)"
        required: false
      value:
        description: "Valeur (set-env)"
        required: false

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-west-3
  HEALTH_PATH: /health

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: AWS via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Exécuter
        run: |
          set -e
          ENV="${{ inputs.cible }}"
          ACT="${{ inputs.action }}"
          echo "ENV=$ENV  ACTION=$ACT"

          case "$ACT" in
            get-health)
              read -r CNAME URL <<<"$(aws elasticbeanstalk describe-environments \
                --environment-names "$ENV" \
                --query 'Environments[0].[CNAME,EndpointURL]' --output text)"
              PROTO="http"; [[ "$ENV" == *"UI"* ]] && PROTO="https"
              HCODE=$(curl -sk -o /dev/null -w "%{http_code}" "$PROTO://$CNAME${HEALTH_PATH}")
              echo "CNAME=$CNAME  HEALTH=$HCODE"
              [ "$HCODE" = "200" ] || exit 1
              ;;
            restart)
              aws elasticbeanstalk restart-app-server --environment-name "$ENV"
              echo "Restart demandé."
              ;;
            tail-eb)
              aws elasticbeanstalk request-environment-info --environment-name "$ENV" --info-type tail
              sleep 12
              URL=$(aws elasticbeanstalk retrieve-environment-info --environment-name "$ENV" --info-type tail --query 'EnvironmentInfo[-1].Message' --output text)
              echo "Logs: $URL"
              ;;
            set-env)
              [ -n "${{ inputs.key }}" ] || { echo "key required"; exit 2; }
              aws elasticbeanstalk update-environment --environment-name "$ENV" \
                --option-settings "Namespace=aws:elasticbeanstalk:application:environment,OptionName=${{ inputs.key }},Value=${{ inputs.value }}"
              ;;
            unset-env)
              [ -n "${{ inputs.key }}" ] || { echo "key required"; exit 2; }
              aws elasticbeanstalk update-environment --environment-name "$ENV" \
                --options-to-remove "Namespace=aws:elasticbeanstalk:application:environment,OptionName=${{ inputs.key }}"
              ;;
            *) echo "Action inconnue"; exit 2 ;;
          esac
