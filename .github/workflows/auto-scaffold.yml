name: Auto-échafaudage RCVo

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: eu-west-3
  S3_BUCKET: ${{ secrets.S3_BUCKET_NAME }}
  CF_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_ID }}

jobs:
  scaffold:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Configurer AWS (clés statiques)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      - name: Générer le scaffold
        run: |
          mkdir -p backend frontend infrastructure

          # Backend Go minimal
          cat > backend/main.go << 'EOF'
          package main
          import "fmt"
          func main() { fmt.Println("Hello RCVo backend!") }
          EOF

          # Frontend HTML minimal
          cat > frontend/index.html << 'EOF'
          <!DOCTYPE html>
          <html><head><meta charset="utf-8"><title>RCVo</title></head>
          <body><h1>Bienvenue sur RCVo</h1></body></html>
          EOF

          # Terraform minimal
          cat > infrastructure/main.tf << 'EOF'
          terraform {
            required_providers {
              aws = {
                source  = "hashicorp/aws"
                version = "~> 4.0"
              }
            }
          }

          provider "aws" {
            region = var.aws_region
          }

          resource "random_id" "id" {
            byte_length = 4
          }

          resource "aws_s3_bucket" "rcvo_static" {
            bucket = "rcvo-static-${random_id.id.hex}"
            acl    = "public-read"
          }
          EOF

          cat > infrastructure/versions.tf << 'EOF'
          terraform {
            required_version = ">= 1.5.0"
          }
          EOF

      - name: Commit des fichiers de scaffold
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "actions@github.com"
          git add backend frontend infrastructure
          git commit -m "chore: add initial scaffold RCVo" || echo "Rien à committer"

      - name: Push sur main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: git push origin HEAD:main

      - name: Synchronisation vers S3
        run: |
          aws s3 sync frontend s3://${{ env.S3_BUCKET }} --delete

      - name: Invalidation CloudFront (optionnelle)
        if: env.CF_DISTRIBUTION_ID != '' 
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ env.CF_DISTRIBUTION_ID }} \
            --paths "/*"
