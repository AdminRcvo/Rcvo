# .github/workflows/auto-scaffold.yml
name: Auto-échafaudage RCVo

# 1) Autoriser GitHub Actions à push sur main
permissions:
  contents: write

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  AWS_REGION: eu-west-3
  S3_BUCKET: ${{ secrets.S3_BUCKET_NAME }}
  CF_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_ID }}

jobs:
  échafaud:
    runs-on: ubuntu-latest

    steps:
      # 2) Récupérer le code et conserver le GITHUB_TOKEN config Git
      - name: Checkout du code
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      # 3) Installer Node.js si tu génères un build front
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 4) Installer les dépendances et builder
      - name: Installer & builder le frontend
        working-directory: ./frontend       # ← adapte
        run: |
          npm ci       # ou yarn install
          npm run build  # ou yarn build

      # 5) Configurer AWS pour les commandes CLI
      - name: Configurer AWS (clés statiques)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:            ${{ env.AWS_REGION }}

      # 6) Committer les nouveaux fichiers de scaffold (si besoin)
      - name: Commit des fichiers générés
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "actions@github.com"
          git add infrastructure/instances/*.tf        # tes tf? adapte
          git diff --quiet && git diff --staged --quiet \
            || git commit -m "chore: mise à jour du scaffold infra"

      # 7) Push sur main pour enregistrer la PR automatique
      - name: Push sur main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: git push origin HEAD:main

      # 8) Synchroniser le build vers S3
      - name: Synchronisation vers S3
        run: |
          aws s3 sync ./frontend/dist s3://${{ env.S3_BUCKET }} --delete

      # 9) Invalidation CloudFront si configurée
      - name: Invalidation CloudFront (optionnelle)
        if: env.CF_DISTRIBUTION_ID != ''
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ env.CF_DISTRIBUTION_ID }} \
            --paths "/*"

