name: CI

permissions:
  contents: write  # permet d'utiliser GITHUB_TOKEN pour push

on:
  workflow_dispatch:    # permet un lancement manuel
  pull_request:         # s‚Äôex√©cute sur toutes les PR
  push:
    branches-ignore:
      - main           # s‚Äôex√©cute sur tous les pushs sauf main

jobs:
  build-and-deploy:
    name: Build & Deploy Scaffold
    runs-on: ubuntu-latest

    steps:
      - name: Checkout du code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Installer & build scaffold
        run: |
          # Si le dossier scaffold existe, on build, sinon on skip
          if [ -d "scaffold" ]; then
            echo "üì¶ Dossier scaffold trouv√©, d√©marrage du build..."
            cd scaffold
            # Installer les d√©pendances selon la pr√©sence du lockfile
            if [ -f package-lock.json ]; then
              npm ci
            else
              npm install
            fi
            # Lancer la build si d√©finie, sinon ignorer
            npm run build || echo "‚ö†Ô∏è Pas de script 'build' : √©tape ignor√©e"
          else
            echo "‚ÑπÔ∏è Pas de dossier 'scaffold', √©tape ignor√©e"
          fi

      - name: Commit des fichiers build√©s
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add scaffold/dist || echo "Rien √† ajouter"
          git commit -m "üöÄ Build scaffold [ci skip]" || echo "Pas de changements √† committer"

      - name: Push sur main
        run: |
          git push origin HEAD:main

      - name: D√©ployer vers S3
        uses: jakejarvis/s3-sync-action@v0.5.1
        with:
          args: --delete   # suppression des ACL pour compatibilit√© avec le bucket
        env:
          AWS_S3_BUCKET: ${{ secrets.S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Invalidation CloudFront (optionnel)
        if: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID != '' }}
        uses: chetan/invalidate-cloudfront-action@v2
        with:
          distribution-id: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Complete job
        run: echo "‚úÖ Build & Deploy termin√©"
        run: echo "‚úÖ Build & Deploy termin√©"
