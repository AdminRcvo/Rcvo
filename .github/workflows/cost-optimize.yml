name: Cost Optimization

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  cost-optimization:
    name: Cost Optimization
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout du code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Debug : liste récursive du workspace
      - name: Debug folder layout
        run: |
          echo "=== Racine du dépôt ==="
          ls -R .

      # 3. Vérification de l’existence du module
      - name: Verify cost-optimizer module exists
        run: |
          if [ ! -d backend/terraform/modules/cost-optimizer ]; then
            echo "❌ Erreur : module cost-optimizer introuvable !"
            exit 1
          fi

      # 4. Installation de Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: "latest"

      # 5. Terraform Init (dans backend/terraform)
      - name: Terraform Init
        working-directory: backend/terraform
        run: terraform init

      # 6. Terraform Apply (dans backend/terraform)
      - name: Terraform Apply
        working-directory: backend/terraform
        run: terraform apply -auto-approve

      # 7. Nettoyage des volumes EBS non attachés
      - name: Cleanup unattached EBS volumes
        run: |
          echo "Cleaning unattached EBS volumes"
          # votre script ici...

      # 8. Libération des Elastic IPs inutilisées
      - name: Release unused Elastic IPs
        run: |
          echo "Releasing unused Elastic IPs"
          # votre script ici...

      # 9. Conversion des ASG de test en Spot
      - name: Convert test ASG to Spot
        run: |
          echo "Converting test ASG to Spot"
          # votre script ici...
