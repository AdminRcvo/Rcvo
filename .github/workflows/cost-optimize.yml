name: Cost Optimization (manual only)

on:
  workflow_dispatch:
    inputs:
      tf_dir:
        description: 'Chemin du module Terraform à exécuter (ex: backend/terraform/modules/cost-optimizer)'
        required: false
        default: 'backend/terraform/modules/cost-optimizer'
      private_subnet_id:
        description: 'ID du subnet pour la NAT instance (ex: subnet-0abc1234)'
        required: false
        default: ''
      apply:
        description: 'Mettre à true pour exécuter terraform apply (danger : modifie infra)'
        required: false
        default: 'false'

jobs:
  cost-optimize:
    name: Cost Optimization
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Debug - show working directory & list tf_dir
        run: |
          echo "Working directory: $(pwd)"
          echo "Requested tf_dir: ${{ github.event.inputs.tf_dir }}"
          ls -la "${{ github.workspace }}/${{ github.event.inputs.tf_dir }}" || true

      - name: Verify tf module exists
        run: |
          if [ ! -d "${{ github.workspace }}/${{ github.event.inputs.tf_dir }}" ]; then
            echo "::error ::Module Terraform introuvable : ${{ github.event.inputs.tf_dir }}"
            exit 1
          fi

      - name: Require private_subnet_id (if module needs it)
        run: |
          # Si le module a besoin d'un subnet pour la NAT instance, obliger l'utilisateur à le fournir.
          if grep -q "var.private_subnet_id" "${{ github.workspace }}/${{ github.event.inputs.tf_dir }}/main.tf"; then
            if [ -z "${{ github.event.inputs.private_subnet_id }}" ]; then
              echo "::error ::Le paramètre 'private_subnet_id' est vide. Renseignez-le pour exécuter le plan."
              exit 1
            fi
            echo "private_subnet_id fourni: ${{ github.event.inputs.private_subnet_id }}"
          else
            echo "Module ne semble pas utiliser private_subnet_id; continuation sans variable."
          fi

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.6.0'

      - name: Terraform Init & Plan
        working-directory: ${{ github.workspace }}/${{ github.event.inputs.tf_dir }}
        run: |
          terraform init -input=false
          # Si private_subnet_id est vide, on plan sans -var (mais Require step empêche si nécessaire)
          if [ -n "${{ github.event.inputs.private_subnet_id }}" ]; then
            terraform plan -input=false -var="private_subnet_id=${{ github.event.inputs.private_subnet_id }}" -out=tfplan
          else
            terraform plan -input=false -out=tfplan
          fi

      - name: Terraform Apply (only if requested)
        if: ${{ github.event.inputs.apply == 'true' }}
        working-directory: ${{ github.workspace }}/${{ github.event.inputs.tf_dir }}
        run: |
          terraform apply -input=false -auto-approve tfplan

      - name: Notify summary
        run: |
          echo "Cost optimization workflow completed. apply=${{ github.event.inputs.apply }} private_subnet_id='${{ github.event.inputs.private_subnet_id }}'"
