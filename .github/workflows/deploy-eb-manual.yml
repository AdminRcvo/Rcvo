name: Manual EB Deploy (Rcvo unified)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Choisis lâ€™environnement Elastic Beanstalk cible"
        required: true
        type: choice
        options:
          - Rcvo-UI-prod
          - Rcvo-Backend-staging
          - rcvo-backend-b

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: eu-west-3

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Pack current code
        run: |
          mkdir -p bundle
          zip -qr bundle/app.zip . -x ".git/*"

      - name: Identify account
        id: acct
        run: |
          echo "id=$(aws sts get-caller-identity --query Account --output text)" >> $GITHUB_OUTPUT

      - name: Upload to S3
        id: s3
        env:
          BUCKET: elasticbeanstalk-${{ env.AWS_REGION }}-${{ steps.acct.outputs.id }}
          KEY: rcvo/${{ github.run_id }}-${{ github.run_attempt }}.zip
        run: |
          aws s3 cp bundle/app.zip s3://$BUCKET/$KEY
          echo "bucket=$BUCKET" >> $GITHUB_OUTPUT
          echo "key=$KEY" >> $GITHUB_OUTPUT

      - name: Create EB version
        id: ver
        env:
          LABEL: deploy-${{ github.run_id }}-${{ github.run_attempt }}
        run: |
          aws elasticbeanstalk create-application-version \
            --application-name Rcvo-backend \
            --version-label "$LABEL" \
            --source-bundle S3Bucket=${{ steps.s3.outputs.bucket }},S3Key=${{ steps.s3.outputs.key }}
          echo "label=$LABEL" >> $GITHUB_OUTPUT

      - name: Update selected environment
        run: |
          echo "Deploying to ${{ github.event.inputs.environment }}"
          aws elasticbeanstalk update-environment \
            --environment-name "${{ github.event.inputs.environment }}" \
            --version-label "${{ steps.ver.outputs.label }}"

      - name: Wait until Ready/Green
        timeout-minutes: 15
        run: |
          for i in {1..90}; do
            read -r STATUS HEALTH VERSION <<<"$(aws elasticbeanstalk describe-environments \
              --environment-names '${{ github.event.inputs.environment }}' \
              --query 'Environments[0].[Status,Health,VersionLabel]' --output text)"
            echo " - $STATUS / $HEALTH ($VERSION)"
            [ "$STATUS" = "Ready" ] && [ "$HEALTH" = "Green" ] && exit 0
            sleep 10
          done
          echo "Timeout waiting for Ready/Green"; exit 1
